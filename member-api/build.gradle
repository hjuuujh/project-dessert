plugins {
    id 'java'
    id "io.spring.dependency-management"
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'com.epages.restdocs-api-spec' version '0.16.0'
}

group = 'com.zerobase'
version = '0.0.1-SNAPSHOT'


ext {
    springCloudSleuthOtelVersion = "1.0.0-M1"
    releaseTrainVersion = "2021.0.1"
    snippetsDir = file('build/generated-snippets')

}

repositories {
    mavenCentral()
    maven {
        url "https://repo.spring.io/snapshot"
    }
    maven {
        url "https://repo.spring.io/milestone"
    }
    maven {
        url "https://repo.spring.io/release"
    }
}

// MSA 용
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${releaseTrainVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-sleuth-otel-dependencies:${springCloudSleuthOtelVersion}"
    }
}

configurations {
    asciidoctorExt
}

dependencies {
    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-gson:0.11.5'
    implementation "io.jsonwebtoken:jjwt-impl:0.11.0"

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // api 간 통신위한 openfeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.github.openfeign:feign-httpclient'

    // eureka client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // config client
    implementation 'org.springframework.cloud:spring-cloud-config-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // redis
    implementation 'org.redisson:redisson-spring-boot-starter:3.35.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // restdocs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.2'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}



asciidoctor {
    inputs.dir snippetsDir
    baseDirFollowsSourceFile()
    configurations 'asciidoctorExt'
    dependsOn test
}


task copyDocument(type: Copy) {
    dependsOn asciidoctor
    delete file('src/main/resources/static/docs/asciidoc')

    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs/asciidoc")
}

build {
    dependsOn copyDocument
}

// 이걸 실행하면 build/api-spec 이생김
// 이렇게 생긴 파일을 swagger에서 읽으면 됨
openapi3 {
    server = 'http://localhost:8080'
    title = 'Dessert Commerce API'
    description = 'Dessert Commerce API description'
    version = '0.1.0'
    format = 'yaml'
    delete file("src/main/resources/static/docs/openapi")
    copy{
        from file("build/api-spec")
        into file("src/main/resources/static/docs/openapi")
    }
}
