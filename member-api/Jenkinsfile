pipeline {
    agent any
    environment {
        DOCKER = 'sudo docker'
        repository = "hjuuujh/member-api"
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
    }

    stages {
        stage('build') {
            steps {
                echo 'Clone'
                sh 'ls -al'
                sh 'chmod +x gradlew'
                sh './gradlew member-api:build'
//                sh './gradlew clean member-api:build'


            }
        }

        stage('docker hub push') {
            steps {
//                  echo '${ref}'
//                  checkout scmvv
//                  echo 'Checkout   Scm'
                dir('member-api') {
                    script{
                        sh 'ls -al'
                        //       app = docker.build("hjuuujh/jenkins")
                        //       sh 'docker login -u hjuuujh'
                        dockerImage = docker.build repository
                        //     sh 'sudo docker build -t member-api .'
                        //     sh 'echo  $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                        //     sh 'docker push $repository'
                        //     sh 'docker rmi $repository'
                        docker.withRegistry('', DOCKERHUB_CREDENTIALS) {
                            dockerImage.push("1.0")
                        }
                    }
                }
            }
        }
//
          stage('Build image') {
              steps {
                  sh 'ls -al'
                  dir('member-api') {
                      sh 'ls -al'
                      sh 'chmod +x ./gradlew'
                      sh './gradlew build'
                  }
                  echo 'Build image...'
              }
          }
//
//          stage('Remove Previous image') {
//              steps {
//                  script {
//                      try {
//                          sh 'docker stop dessert-member-api'
//                      } catch (e) {
//                          echo 'fail to stop and remove container'
//                      }
//                  }
//              }
//          }
//
//          stage('Run New image') {
//              steps {
//                  sh 'docker-compose up --build -d dessert-member-api'
//                  echo 'Run New member image'
//              }
//          }
    }
}