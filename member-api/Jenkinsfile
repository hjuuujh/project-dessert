 pipeline {
     agent any
     environment {
         DOCKER = 'sudo docker'
     }

    tools {
        gradle 8.8
    }

     stages {
     stage('test'){
     steps {
     echo 'test'
     echo 'Clone'
     git branch: 'member-api', credentialsId: 'github-webhook', url: 'https://github.com/hjuuujh/project-dessert'
     sh 'ls -al'
     sh 'chmod +x gradlew'
     sh './gradlew member-api:build'
     sh 'cd member-api'
     sh 'ls -al'
//      dir('member-api') {
//
//                      sh 'ls -al'
// //                      sh 'chmod +x ./gradlew'
//                      sh './gradlew build'
//                  }
     }
     }
//          stage('Clone Repository') {
//              steps {
//                  echo '${ref}'
//                  checkout scm
//                  echo 'Checkout Scm'
//              }
//          }
//
//          stage('Build image') {
//              steps {
//                  sh 'ls -al'
//                  dir('member-api') {
//                      sh 'ls -al'
//                      sh 'chmod +x ./gradlew'
//                      sh './gradlew build'
//                  }
//                  echo 'Build image...'
//              }
//          }
//
//          stage('Remove Previous image') {
//              steps {
//                  script {
//                      try {
//                          sh 'docker stop dessert-member-api'
//                      } catch (e) {
//                          echo 'fail to stop and remove container'
//                      }
//                  }
//              }
//          }
//
//          stage('Run New image') {
//              steps {
//                  sh 'docker-compose up --build -d dessert-member-api'
//                  echo 'Run New member image'
//              }
//          }
     }
 }