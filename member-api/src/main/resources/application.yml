server:
  port: 8090

spring:
  profiles:
    active: dev
  application:
    name: member-api
  cloud:
    config:
      label: master
      profile: dev
      uri: http://localhost:8888

  config:
    import: optional:configserver:http://localhost:8888

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  redis:
    # host: localhost
    host: redis
    port: 6379
  jwt:
    secret: 4c216af15dddd3987142b0e1a66489f464623a449d4c0d12506fd30b376e6c7dc5c3d9f50adb8b74297a0c2e863203adaf76c4f1f630b3a11902e6dc40151214

  main:
    allow-bean-definition-overriding: true

eureka: # eureka client 등록
  instance:
    preferIpAddress: true # 컨테이너 기반 배포면 임의의 호스트이름이 부여되므로 true이용해 ip주소로 등록해 찾도록

  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"

external-api:
  #  member:
  #    url: http://localhost:8090/api/member
#  member:
#    url: http://member-api:8090/api/member
#  store:
#    url: http://localhost:8091/api/store
  store:
    url: http://store-api:8091/api/store
#  order:
#    url: http://localhost:8092/api/order
  order:
    url: http://order-api:8092/api/order


level:
  org.springframework.security: DEBUG

feign:
  autoconfiguration:
    jackson:
      enabled: true